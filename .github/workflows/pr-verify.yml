name: PR Verify
on:
  workflow_dispatch: 
  pull_request:
    branches: [ "main" ]  

jobs:
  Build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
         
      - name: Build
        uses: ./.github/templates/build-nuke
        with:
          stepName: "Build"
          target: "Compile"
    
  Unit-Tests:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Unit Tests
        uses: ./.github/templates/build-nuke
        with:
          stepName: "Unit Test"
          target: "UnitTests"

      - name: Publish Test Results Summary
        if: always()
        run: cat artifacts/test-results/*.md > $GITHUB_STEP_SUMMARY

      - name: Ls coverage folder
        if: always()
        run: ls -l artifacts/coverage

      - name: Ls unit test folder
        if: always()
        run: ls -l artifacts/test-results

      - name: Publish Code Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            artifacts/coverage
            artifacts/test-results
            
  Sonarqube:
    needs: Unit-Tests
    runs-on: ubuntu-latest
    steps:        
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET for Build
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
            versionSpec: '5.x'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v1.1.1
        id: git_version
        with:
          useConfigFile: true

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ${{ inputs.gh_working_directory }}/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Download Code Coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: artifacts
          
      - name: List Downloaded Artifacts
        run: |
          ls -l artifacts
          ls -l artifacts/coverage
          ls -l artifacts/test-results

      - name: Run Sonar Code Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
          SONAR_PROJECT_KEY: "hpessuoy_solution-template"
          SHORT_SHA: ${{steps.git_version.outputs.shortSha}}
        uses: ./.github/templates/build-nuke
        with:
          nukeStepName: "Run Code Analysis"
          nukeTarget: "SonarStartCodeAnalysis Compile SonarEndCodeAnalysis"